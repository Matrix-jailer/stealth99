// stealth.min.js
Object.defineProperty(navigator, 'webdriver', {
  get: () => false,
});

window.navigator.chrome = {
  runtime: {},
};

Object.defineProperty(navigator, 'languages', {
  get: () => ['en-US', 'en'],
});

Object.defineProperty(navigator, 'plugins', {
  get: () => [1, 2, 3, 4, 5],
});

Object.defineProperty(navigator, 'platform', {
  get: () => 'Win32',
});

Object.defineProperty(navigator, 'userAgentData', {
  get: () => ({
    brands: [{ brand: 'Not)A;Brand', version: '99' }, { brand: 'Chromium', version: '99' }],
    mobile: false,
    platform: 'Windows',
  }),
});

const originalQuery = window.navigator.permissions.query;
window.navigator.permissions.query = (parameters) =>
  parameters.name === 'notifications'
    ? Promise.resolve({ state: Notification.permission })
    : originalQuery(parameters);
